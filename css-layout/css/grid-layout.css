/* justify-items → align items horizontally in their cell

align-items → align items vertically in their cell

justify-content → move the whole grid left/right

align-content → move the whole grid up/down

So in Grid:

justify-* = horizontal
align-* = vertical
No matter what. */

body {
  font-family: sans-serif;
}

/* Justify content and align content works when there is space of width and height
   and so width and height has to decrease their value.
*/

.container {
  display: grid;
  /* grid-template-columns: 200px 200px 200px; */
  /* grid-template-columns: 1fr 1fr 1fr; */
  /* grid-template-columns: 2fr 1fr 1fr;
  column-gap: 20px;
  row-gap: 30px; */
  /*grid-template-columns: repeat(3, 1fr);*/ /* Explicit grid */
  grid-template-columns: repeat(auto-fit, minmax(400px, auto));
  gap: 20px;
  /*grid-auto-rows: 100px;*/ /*implicit grid*/
  grid-auto-rows: minmax(100px, auto); /* minimum and maximum*/
  border: 5px solid red;
}

/* .container div:nth-child(1) {
    white-space: nowrap;
} */

.container > div {
  border-radius: 5px;
  padding: 10px;
  background-color: rgb(207 232 220);
  border: 2px solid rgb(79 185 227);
}

.box {
  font-family: sans-serif;
  display: grid;
  grid-template-areas:
    "header header"
    "sidebar content"
    "sidebar footer";
  grid-template-columns: 1fr 3fr;
  gap: 20px;
  border: 5px solid red;
  margin-top: 5rem;
}
header,
footer,
aside,
main {
  border-radius: 5px;
  padding: 10px;
  background-color: rebeccapurple;
  color: whitesmoke;
  text-align: center;
}
aside {
  border-right: 1px solid rebeccapurple;
}

header {
  grid-area: header;
}

main {
  grid-area: content;
}

aside {
  grid-area: sidebar;
}

footer {
  grid-area: footer;
}

/* header {
  grid-column: 1 / 3;
  grid-row: 1;
  border: 4px solid red;
}

main {
  grid-column: 2;
  grid-row: 2;
}

aside {
  grid-column: 1;
  grid-row: 2;
}

footer {
  grid-column: 1 / 3;
  grid-row: 3;
} */


/* template areas */
.container-area {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(1fr, auto));
    grid-template-rows: minmax(100px, auto);
    grid-template-areas: 
    'header1 header1'
    'content sidebar'
    '.. sidebar'
    'footer footer';
    /* grid-template-columns: 1fr 2fr; */
    margin-top: 20px;
    /* color: white; */
    border: 7px solid saddlebrown;
}

.container-area > div {
    background-color: blueviolet;
    color: white;
    padding: 1rem;
    margin: 15px 10px;
}

.container-area .header {
   grid-area: header1;
   background-color: crimson;
}

.sidebar {
  grid-area: sidebar;
}

/* Nested and subgrid */
.outer-grid {
    border: 3px solid purple;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: minmax(100px, auto);
}

.inner-grid {
    display: grid;
    /* grid-template-columns: subgrid; */
    grid-template-columns: 1fr 1fr;
}

.grid-background {
    background-color: brown;
    color: white;
    padding: 0.5rem;
    margin: 1rem;
}

.footer {
    grid-column: 2/3;
}

/* Items shrink the children while content works without shrinking the children */

/* Grid properties */
.wrapper {
    display: grid;
    grid-template-columns: repeat(2, 300px);
    /* grid-template-rows: 200px; */
    /* align-items: start; */
    height: 500px;
    /* justify-content: space-between; */
    /* align-content: center; */
    /* justify-items: end;
    align-items: start; */
    align-content: end;
    justify-content: center;
    margin: 1rem;
    border: 5px solid crimson;
}

.wrapper div {
    background-color: purple;
    padding: 1rem;
    color: white;
    margin: 0.5rem;
}

.wrapper > div:nth-child(1) {
    justify-self: end;
}

.wrapper > div:nth-child(2) {
    align-self: start;
    background-color: crimson;
}



